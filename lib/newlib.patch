diff -ruN old/config.sub new/config.sub
--- old/config.sub	2023-12-31 20:00:18.000000000 +0300
+++ new/config.sub	2024-12-09 19:19:37.005326356 +0300
@@ -1725,7 +1725,7 @@
 	     | skyos* | haiku* | rdos* | toppers* | drops* | es* \
 	     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \
 	     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \
-	     | nsk* | powerunix* | genode* | zvmoe* | qnx* | emx*)
+	     | nsk* | powerunix* | genode* | zvmoe* | qnx* | emx* | argentum* )
 		;;
 	# This one is extra strict with allowed versions
 	sco3.2v2 | sco3.2v[4-9]* | sco5v6*)
diff -ruN old/newlib/configure.host new/newlib/configure.host
--- old/newlib/configure.host	2023-12-31 20:00:18.000000000 +0300
+++ new/newlib/configure.host	2024-12-09 19:19:37.015326359 +0300
@@ -439,6 +439,11 @@
 	posix_dir=posix
 	unix_dir=unix
 	;;
+	*-*-argentum*)
+	sys_dir=argentum
+	posix_dir=posix
+	unix_dir=unix
+	;;
   *-*-tirtos*)
 	sys_dir=tirtos
 	have_crt0="no"
@@ -615,6 +620,9 @@
         # turn off unsupported items in posix directory 
 	newlib_cflags="${newlib_cflags} -D_NO_GETLOGIN -D_NO_GETPWENT -D_NO_GETUT -D_NO_GETPASS -D_NO_SIGSET -D_NO_WORDEXP -D_NO_POPEN -D_NO_POSIX_SPAWN"
 	;;
+	*-*-argentum*)
+  newlib_cflags="${newlib_cflags} -nostdlib -DHAVE_NANOSLEEP -DMALLOC_PROVIDED"
+	;;
 # VxWorks supplies its own version of malloc, and the newlib one
 # doesn't work because VxWorks does not have sbrk.
   *-wrs-vxworks*)
diff -ruN old/newlib/libc/acinclude.m4 new/newlib/libc/acinclude.m4
--- old/newlib/libc/acinclude.m4	2023-12-31 20:00:18.000000000 +0300
+++ new/newlib/libc/acinclude.m4	2024-12-09 19:19:37.015326359 +0300
@@ -25,6 +25,7 @@
   w65
   xtensa
   z8ksim
+  argentum
 ], [AM_CONDITIONAL([HAVE_LIBC_SYS_]m4_toupper(SYS_DIR)[_DIR], test "${sys_dir}" = SYS_DIR)])
 
 AC_TYPE_LONG_DOUBLE
diff -ruN old/newlib/libc/include/machine/setjmp.h new/newlib/libc/include/machine/setjmp.h
--- old/newlib/libc/include/machine/setjmp.h	2023-12-31 20:00:18.000000000 +0300
+++ new/newlib/libc/include/machine/setjmp.h	2024-12-09 19:19:37.015326359 +0300
@@ -439,7 +439,7 @@
 
 _END_STD_C
 
-#if (defined(__CYGWIN__) || defined(__rtems__)) && __POSIX_VISIBLE
+#if (defined(__CYGWIN__) || defined(__rtems__) || defined(__ARGENTUM__)) && __POSIX_VISIBLE
 #include <signal.h>
 
 #ifdef __cplusplus
diff -ruN old/newlib/libc/include/sys/features.h new/newlib/libc/include/sys/features.h
--- old/newlib/libc/include/sys/features.h	2023-12-31 20:00:18.000000000 +0300
+++ new/newlib/libc/include/sys/features.h	2024-12-09 19:21:09.405284437 +0300
@@ -545,6 +545,13 @@
 
 #endif /* __CYGWIN__ */
 
+#ifdef __ARGENTUM__
+
+#define _POSIX_TIMERS			        1
+#define _POSIX_MONOTONIC_CLOCK		1
+
+#endif /* __ARGENTUM__ */
+
 #ifdef __cplusplus
 }
 #endif
diff -ruN old/newlib/libc/include/sys/signal.h new/newlib/libc/include/sys/signal.h
--- old/newlib/libc/include/sys/signal.h	2023-12-31 20:00:18.000000000 +0300
+++ new/newlib/libc/include/sys/signal.h	2024-12-09 19:19:37.015326359 +0300
@@ -113,6 +113,27 @@
 #define sa_sigaction  _signal_handlers._sigaction
 #endif
 
+#elif defined(__ARGENTUM__)
+
+#define SA_NOCLDSTOP  0x1
+#define SA_SIGINFO    0x2
+#define SA_RESTART    0x4
+#define SA_RESETHAND  0x8
+
+typedef void (*_sig_func_ptr)(int);
+
+struct sigaction {
+  union {
+    _sig_func_ptr _sa_handler;
+    void (*_sa_sigaction)(int, struct siginfo *, void *);
+  } _u;
+	sigset_t sa_mask;
+	int sa_flags;
+};
+
+#define sa_handler    _u._sa_handler
+#define sa_sigaction  _u._sa_sigaction
+
 #else /* defined(__rtems__) */
 
 #define SA_NOCLDSTOP 1  /* only value supported now for sa_flags */
diff -ruN old/newlib/libc/include/sys/stat.h new/newlib/libc/include/sys/stat.h
--- old/newlib/libc/include/sys/stat.h	2023-12-31 20:00:18.000000000 +0300
+++ new/newlib/libc/include/sys/stat.h	2024-12-09 19:19:37.015326359 +0300
@@ -142,7 +142,7 @@
 int	stat (const char *__restrict __path, struct stat *__restrict __sbuf );
 mode_t	umask (mode_t __mask );
 
-#if defined (__SPU__) || defined(__rtems__) || defined(__CYGWIN__)
+#if defined (__SPU__) || defined(__rtems__) || defined(__CYGWIN__) || defined(__ARGENTUM__)
 int	lstat (const char *__restrict __path, struct stat *__restrict __buf );
 int	mknod (const char *__path, mode_t __mode, dev_t __dev );
 #endif
diff -ruN old/newlib/libc/include/sys/types.h new/newlib/libc/include/sys/types.h
--- old/newlib/libc/include/sys/types.h	2023-12-31 20:00:18.000000000 +0300
+++ new/newlib/libc/include/sys/types.h	2024-12-09 19:19:37.015326359 +0300
@@ -45,25 +45,6 @@
 #include <sys/_types.h>
 #include <sys/_stdint.h>
 
-#if __BSD_VISIBLE
-#include <machine/endian.h>
-#include <sys/select.h>
-#  define	physadr		physadr_t
-#  define	quad		quad_t
-
-#ifndef _IN_ADDR_T_DECLARED
-typedef	__uint32_t	in_addr_t;	/* base type for internet address */
-#define	_IN_ADDR_T_DECLARED
-#endif
-
-#ifndef _IN_PORT_T_DECLARED
-typedef	__uint16_t	in_port_t;
-#define	_IN_PORT_T_DECLARED
-#endif
-
-typedef	__uintptr_t	u_register_t;
-#endif /* __BSD_VISIBLE */
-
 #if __MISC_VISIBLE
 #ifndef _BSDTYPES_DEFINED
 /* also defined in mingw/gmon.h and in w32api/winsock[2].h */
@@ -225,4 +206,23 @@
 
 #undef __need_inttypes
 
+#if __BSD_VISIBLE
+#include <machine/endian.h>
+#include <sys/select.h>
+#  define	physadr		physadr_t
+#  define	quad		quad_t
+
+#ifndef _IN_ADDR_T_DECLARED
+typedef	__uint32_t	in_addr_t;	/* base type for internet address */
+#define	_IN_ADDR_T_DECLARED
+#endif
+
+#ifndef _IN_PORT_T_DECLARED
+typedef	__uint16_t	in_port_t;
+#define	_IN_PORT_T_DECLARED
+#endif
+
+typedef	__uintptr_t	u_register_t;
+#endif /* __BSD_VISIBLE */
+
 #endif	/* _SYS_TYPES_H */
diff -ruN old/newlib/libc/posix/posix_spawn.c new/newlib/libc/posix/posix_spawn.c
--- old/newlib/libc/posix/posix_spawn.c	2023-12-31 20:00:18.000000000 +0300
+++ new/newlib/libc/posix/posix_spawn.c	2024-12-09 19:19:37.015326359 +0300
@@ -258,8 +258,8 @@
 		if (fchdir (fae->fae_dirfd) == -1)
 			return (errno);
 		break;
-	}
 #endif
+	}
 	return (0);
 }
 
diff -ruN old/newlib/libc/sys/Makefile.inc new/newlib/libc/sys/Makefile.inc
--- old/newlib/libc/sys/Makefile.inc	2023-12-31 20:00:18.000000000 +0300
+++ new/newlib/libc/sys/Makefile.inc	2024-12-09 19:19:37.015326359 +0300
@@ -70,3 +70,6 @@
 if HAVE_LIBC_SYS_Z8KSIM_DIR
 include %D%/z8ksim/Makefile.inc
 endif
+if HAVE_LIBC_SYS_ARGENTUM_DIR
+include %D%/argentum/Makefile.inc
+endif
